<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bmatser.dao.GoodsActivityBrandMapper" >
  <resultMap id="BaseResultMap" type="bmatser.model.GoodsActivityBrand" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_activity_id" property="goodsActivityId" jdbcType="INTEGER" />
    <result column="brand_id" property="brandId" jdbcType="INTEGER" />
    <result column="deduction_rate" property="deductionRate" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="per_limt_num" property="perLimtNum" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, goods_activity_id, brand_id, deduction_rate, stock, per_limt_num, start_time, 
    end_time, status, create_time, create_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from goods_activity_brand
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from goods_activity_brand
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="bmatser.model.GoodsActivityBrand" >
    insert into goods_activity_brand (id, goods_activity_id, brand_id, 
      deduction_rate, stock, per_limt_num, 
      start_time, end_time, status, 
      create_time, create_user_id)
    values (#{id,jdbcType=BIGINT}, #{goodsActivityId,jdbcType=INTEGER}, #{brandId,jdbcType=INTEGER}, 
      #{deductionRate,jdbcType=VARCHAR}, #{stock,jdbcType=INTEGER}, #{perLimtNum,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="bmatser.model.GoodsActivityBrand" >
    insert into goods_activity_brand
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsActivityId != null" >
        goods_activity_id,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="deductionRate != null" >
        deduction_rate,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="perLimtNum != null" >
        per_limt_num,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="activityType != null" >
        activity_type,
      </if>
      <if test="activityId != null" >
        activity_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsActivityId != null" >
        #{goodsActivityId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="deductionRate != null" >
        #{deductionRate,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="perLimtNum != null" >
        #{perLimtNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
       <if test="activityType != null" >
        #{activityType},
      </if>
      <if test="activityId != null" >
        #{activityId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bmatser.model.GoodsActivityBrand" >
    update goods_activity_brand
    <set >
      <if test="goodsActivityId != null" >
        goods_activity_id = #{goodsActivityId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="deductionRate != null" >
        deduction_rate = #{deductionRate,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="perLimtNum != null" >
        per_limt_num = #{perLimtNum,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="bmatser.model.GoodsActivityBrand" >
    update goods_activity_brand
    set goods_activity_id = #{goodsActivityId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      deduction_rate = #{deductionRate,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      per_limt_num = #{perLimtNum,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>